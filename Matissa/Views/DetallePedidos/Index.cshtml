@using X.PagedList;
@model IPagedList<Matissa.Models.Pedido>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
<link rel="stylesheet" href="~/css/pedido.css" asp-append-version="true" />
@{
    <div class="text-light p-3 text-center" style="background-color: #3cc3bd">
        <h1 class="merienda">Listado de pedidos</h1>
    </div>
    <div class="container mt-5">
        <div class="container mb-5">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-floating search">
                        <form asp-controller="DetallePedidos" asp-action="Index">
                            <input type="text" class="form-control rounded-pill" name="buscar" placeholder="Buscar..." />
                        </form>
                    </div>
                </div>
                <div class="col-sm-4">
                    <a class="btn create-pedido rounded-pill" asp-action="Create" asp-controller="DetallePedidos">
                        Generar reporte de pedidos
                    </a>
                </div>
                <div class="col-sm-4">
                    <a class="btn create-pedido rounded-pill" asp-action="Create" asp-controller="Pedidos">
                        Crear pedido
                        <span class="material-icons">
                            shopping_bag
                        </span>
                    </a>
                </div>
            </div>
        </div>

        @if (Model.Count() > 0)
        {

        }
        else
        {
            <p>No exiten registros</p>
        }
    </div>
    <div class="pagination-container">
        @if (Model != null && Model.PageCount > 1)
        {
            <div class="d-flex justify-content-center mb-5">
                <nav aria-label="Page navigation bg-dark">
                    <ul class="pagination">

                        <!-- Botón para la página anterior (oculto en la página 1) -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>

                        <!-- Iterar sobre las páginas disponibles -->
                        @for (var i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }

                        <!-- Botón para la página siguiente (oculto en la última página) -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>

                    </ul>
                </nav>
            </div>
        }
    </div>
}